<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ninokz</title>
  
  <subtitle>你干嘛，哎哟</subtitle>
  <link href="https://ninokz.github.io/atom.xml" rel="self"/>
  
  <link href="https://ninokz.github.io/"/>
  <updated>2023-07-19T06:00:01.000Z</updated>
  <id>https://ninokz.github.io/</id>
  
  <author>
    <name>Ninokz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RMMZ游戏逆向过程以及汉化</title>
    <link href="https://ninokz.github.io/2023/07/19/reverse-rmmz%20game/"/>
    <id>https://ninokz.github.io/2023/07/19/reverse-rmmz%20game/</id>
    <published>2023-07-19T06:00:00.000Z</published>
    <updated>2023-07-19T06:00:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景-简介"><a class="header-anchor" href="#背景-简介"></a>背景&amp;简介</h2><p>好久没更新了，随便更一篇吧，近来暑假有时闲来无事，也不想coding练习~~（过好多天再说😥）~~，只想放松玩玩玩游戏🤭…</p><p>回到正题，我们的<a href="http://akariblast.com/">Akari Blast!</a>社团 <s>（one roome制作者）</s> 在7月6号发布了一款大型战斗RPG [煌星のヴィクトリアーズ]（虽然是用RMMZ做的一款游戏）让我比较感兴趣，我便下载了这款(バター)游戏，这是一款奖励游戏🥵，游戏画面让我想起了<strong>Eushully</strong>社团的像素风格游戏，只不过像素风格这一款像素可能粒度大一点，E社粒度细得多，但是谁又不喜欢像素小人儿呢？</p><p>再回到正题，我玩了一会儿，发现游戏里各种日本假名乱飞，例如什么「エリア」为啥不直接用「地域」代替啊，看的麻了。虽然朋友也建议为啥不用某个注入汉化软件去玩，但是那个质量比较呵呵。我还是喜欢游戏本身就是汉化的。所以诞生了自己为什么不去逆向汉化一下这个游戏呢？于是，这个坑🕳就开了。</p><h2 id="起步-信息搜集-I"><a class="header-anchor" href="#起步-信息搜集-I"></a>起步 - 信息搜集 I</h2><p>按照以往的玩RPGMAKER系列游戏的经验，目录下应该会有一个文件夹存取相关的文本和图片数据，于是我在 <em>victorias_official_v100\package.nw</em> 中找到了熟悉的结构(PS:这个结构因该是RPGMAKER制作的系列游戏的典型目录,实际上可以去RPGMAKER官网下载一个引擎,然后自己新建一个工程可以观察)</p><blockquote><p>和RPGMAKER的工程结构对比下,我在看看其中文件目录存放游戏数据的目录名叫package.nw,为什么是在这个文件夹下???RPGMAKER工程中可没有这个文件夹. package.nw,文件夹名称,我们推测一下,package释义为: 包;打包, nw是什么?现在还未知,我们暂时保留这个猜测…</p></blockquote><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_01.png" style="height:350px"/><p>由于，本次我们的任务是汉化，不是拆包看图片，所以其中例如  <em>\img</em> 文件夹就可以略过了，现在有2个文件夹吸引了我的注意: <em>\data</em> 与 <em>\data_encrypted</em> 既然是拿出来卖的游戏，那<strong>加密</strong>应该是显然有的了，第二个尤其可疑。</p><p>审查 <em>\data</em> 文件夹，全是map相关的json文件，推测应该是地图相关的文件，没发现我认为有趣且值得注意的文件</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_02.png" style="height:450px"/><p>审查 <em>\data_encrypted</em> 文件夹，有趣，熟悉的结构，拨云见日，尤其是这个<strong>csv文件</strong></p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_03.png" style="height:450px"/><p><em>“VSCode,启动!”</em> ,但是当我打开了这2文件后… woc 属于是开幕雷击了,文件找是找到了, 但是这个看起来就是密密麻麻一大串,这怎么让我汉化下手,看来确实是<strong>加密</strong>过了</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_04.png" style="height:400px"/><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_05.png" style="height:400px"/><h2 id="反思-信息搜集-II"><a class="header-anchor" href="#反思-信息搜集-II"></a>反思 - 信息搜集 II</h2><p>现在我们锁定了嫌疑成分很大的文件, 但是它是加密了的, 我们的工作陷入了停滞, 怎么办呢?  既然游戏在本地能够跑起来,游戏内的文本顺序是正常的,那么他必定存在一个解密函数,在加载游戏文件时将游戏加密文本解密然后供游戏引擎使用</p><center> 加密文件file_encrypt -> $f(file)$ -> 解密文件file_decrypt     -> engine </center><p>我所需要做的就是找到这个解密函数,一切就变得好办了, 那么问题来了,如果是一般的程序我们可以用ollydbg去逆向,但是对于rmmz这种游戏引擎来说,<strong>用这个去找解密函数可能极其耗费时间</strong>,又怎么办呢?</p><p>先查下维基  <s>坤</s> 对rmmz系列的描述</p><blockquote><p><strong>RPG Maker MZ</strong>是一款<a href="https://zh.wikipedia.org/wiki/%E8%A7%92%E8%89%B2%E6%89%AE%E6%BC%94%E6%B8%B8%E6%88%8F">角色扮演遊戲</a>的製作工具，為<a href="https://zh.wikipedia.org/wiki/RPG_Maker_MV">RPG Maker MV</a>的後繼版本。於2020年8月20日發售</p></blockquote><p>后继版本,嗯,让我们看看前作mv(话说, 我steam还买了mv)</p><blockquote><p>名稱中的「MV」是指「Multi-View」，即為「多觀點」的意思。遊戲可以發布在<a href="https://zh.wikipedia.org/wiki/Windows">Windows</a>、<a href="https://zh.wikipedia.org/wiki/OS_X">Mac</a>、<a href="https://zh.wikipedia.org/wiki/Android">Android</a>、<a href="https://zh.wikipedia.org/wiki/IOS">iOS</a>、<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8">網頁瀏覽器</a>等平台。</p><p>基本型態是由<a href="https://zh.wikipedia.org/wiki/HTML5">HTML5</a>與<a href="https://zh.wikipedia.org/wiki/JavaScript">JavaScript</a>組成，專為在<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8">網頁瀏覽器</a>上遊玩所設計，經過轉換也能夠發布在各個平台</p><p>Windows與Mac版使用NW.js格式發布。Android與iOS版使用<a href="https://zh.wikipedia.org/w/index.php?title=Crosswalk&amp;action=edit&amp;redlink=1">Crosswalk</a>與<a href="https://zh.wikipedia.org/wiki/Apache_Cordova">Apache Cordova</a>格式發布。<a href="https://zh.wikipedia.org/wiki/Linux">Linux</a>與<a href="https://zh.wikipedia.org/wiki/Windows%E5%95%86%E5%BA%97">Windows商店</a>版雖然尚未支援，但如果開發環境符合，是可以自行發布的。</p><p>在不同平台上，被讀取的音樂格式是不同的。Windows版使用<a href="https://zh.wikipedia.org/wiki/Ogg">ogg</a>格式、手機板使用<a href="https://zh.wikipedia.org/wiki/%E9%80%B2%E9%9A%8E%E9%9F%B3%E8%A8%8A%E7%B7%A8%E7%A2%BC">m4a</a>格式。如果沒有必要的文件，遊戲會強制停止。但在測試時難以察覺，這點要注意。</p><p>影片與圖片則建議使用<a href="https://zh.wikipedia.org/wiki/WebM">WebM</a>與<a href="https://zh.wikipedia.org/wiki/WebP">WebP</a>。</p></blockquote><p>能够在网页浏览器玩? 而且是javascript脚本,那岂不是可以通过浏览器进行程序逆向?? 回到我们文章起步时的那个猜测, 看来应该是通过某个东西打包成了包,供外部exe调用实现在exe窗口上游玩. 那搜下nw,果然nwjs,这下便串联起来了,游戏可能是通过nwjs打包的.</p><p>进入pakage.nw发现有一个index.html,应该是入口,点开康康</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_06.png" style="height:300px"/><p>嗯,打开F12,检查控制台</p><center>Access to XMLHttpRequest at 'file:///package.nw/js/main.js' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, isolated-app, chrome-extension, chrome-untrusted, https, edge</center><p>委托bing搜索: 发现这是跨域错误,即浏览器在打开本地文件出现了这个问题.虽然我不是WEB开发,但是也有了解,浏览器去直接操作读写本地文件原则是不被允许的.那有没有方法绕过呢?</p><p>委托bing搜索: 找到解决方案,新建edge.exe快捷方式,并且在在给属性-目标添加启动参数</p><center> --disable-web-security --user-data-dir=某一个文件夹路径  </center><p>照做,再次启动游戏,发现成功启动,这样我们可以在浏览器上进行游戏</p><p><strong>这下我们的调试环境便大功告成</strong></p><h2 id="逆向-寻找解密函数"><a class="header-anchor" href="#逆向-寻找解密函数"></a>逆向 - 寻找解密函数</h2><p>我们通过浏览器启动游戏,然后打开控制台准备开始我们的调试工作. 经过1.我们得知游戏是由js编写脚本插件然后供游戏使用,json文件可能是游戏内对象的数据.那么我们的解密函数可能就在众多的js脚本文件里面,在文章起头我们在 <em>victorias_official_v100\package.nw</em> 中发现了js文件夹,通过我们对rpgmaker的工程文件对比,这里应该是存放游戏脚本的地方</p><p><em><strong>解密函数是作者去调用的或者是作者写的,那么我们要找的有这个函数的脚本文件才行</strong></em></p><h3 id="寻找目标脚本"><a class="header-anchor" href="#寻找目标脚本"></a>寻找目标脚本</h3><ul><li><strong>寻找1</strong></li></ul><p>打开浏览器,F12,启动游戏,转到<strong>网络</strong>选项卡,调查文件请求链,发现大部分文件都是位于js文件夹中的js脚本文件,证实了我们的猜想 <em>‘即js文件目录是游戏存js脚本的文件夹’</em>,那么作者的文件大概率在这个文件夹路径下</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_07.png" style="height:450px"/><ul><li><strong>寻找2</strong></li></ul><p>我们继续查看程序请求链,抽几个js文件发现这几个文件都指向了 <em>\package.nw\js\plugins</em> 目录,我们打开这个目录,任意打开文件</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_08.png" style="height:450px"/><p>嗯,紧邹的眉头舒展开来,日文注释,还有作者推特链接,Blog链接啥的,看来这个文件夹都是作者的脚本文件</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_09.png" style="height:450px"/><ul><li><strong>寻找3</strong></li></ul><p>现在问题来到了核心问题,这个文件夹js脚本很多很多,怎么才能锁定我们的目标呢??对比在win程序逆向时是可以用火绒剑之类的程序定位目标程序调用文件的,我推测浏览器应该也可以,尝试搜索下Actor.json,externMsg,结果出现了我们的目标rmmz_managers.js和DataEncryption.js</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_11.png" style="height:450px"/><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_12.png" style="height:450px"/><p>尤其是DataEncryption.js这名字就很可疑,但是为啥是DataEncryption??加密??先打开rmmz_managers康康,嗯,很长,锁定到提示的112行,嗯,没啥东西,关闭!</p><p><strong>打开DataEncryption.js</strong></p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_12.png" style="height:450px"/><h3 id="目标脚本探秘"><a class="header-anchor" href="#目标脚本探秘"></a>目标脚本探秘</h3><p>有趣,尤其是这种函数,让人极其敏感啊,这个文件嫌疑很大</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s,</span><br><span class="line">  l = <span class="literal">null</span>,</span><br><span class="line">  c = <span class="number">146103486</span>,</span><br><span class="line">  d = <span class="number">950312395</span>,</span><br><span class="line">  f = <span class="number">720541948</span>,</span><br><span class="line">  p = <span class="title class_">Number</span>(a.<span class="property">seed</span>),</span><br><span class="line">  u = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">g</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!l || u &lt;= a - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> (l = l || []; u &lt;= a - <span class="number">1</span>; u = (u + <span class="number">1</span>) | <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> e = c ^ (c &lt;&lt; <span class="number">11</span>);</span><br><span class="line">      (c = d),</span><br><span class="line">        (d = f),</span><br><span class="line">        (f = p),</span><br><span class="line">        (p = p ^ (p &gt;&gt;&gt; <span class="number">19</span>) ^ e ^ (e &gt;&gt;&gt; <span class="number">8</span>)),</span><br><span class="line">        (l[u] = (<span class="title class_">Math</span>.<span class="title function_">abs</span>(p) % <span class="number">1e5</span>) / <span class="number">1e5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="csv乱序文件"><a class="header-anchor" href="#csv乱序文件"></a>csv乱序文件</h4><p>而且文件还出现了loadCSVFile,这不就是我们要的吗?</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_14.png" style="height:250px"/> <p>观察这个函数流程t是请求的返回结果,这个函数功能是请求csv文件那么,有理由推测请求结果可能是csv文件的内容,那我们输出t.responseText,重新运行游戏,发现控制台输出的结果是和乱码csv文件是一样的结果!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(<span class="title class_">DataManager</span>.<span class="property">loadCSVFile</span> = <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>(),i = <span class="string">&quot;data/&quot;</span> + n;</span><br><span class="line">            t.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, i),</span><br><span class="line">            t.<span class="title function_">overrideMimeType</span>(<span class="string">`text/plain; charset=<span class="subst">$&#123;$externMessage.CsvFileEncode&#125;</span>`</span>),</span><br><span class="line"></span><br><span class="line">            (t.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (t.<span class="property">status</span> &lt; <span class="number">400</span>)</span><br><span class="line">                  <span class="keyword">if</span> (<span class="title function_">o</span>(e)) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (r) <span class="keyword">var</span> n = performance.<span class="title function_">now</span>();</span><br><span class="line"><span class="comment">// 输出尝试????</span></span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">log</span>(t.<span class="property">responseText</span>)</span><br><span class="line">                     <span class="keyword">var</span> i = <span class="title function_">a</span>(t.<span class="property">responseText</span>);</span><br><span class="line">                    r &amp;&amp; performance.<span class="title function_">now</span>() - n, (<span class="variable language_">window</span>[e] = i);</span><br><span class="line">                  &#125; <span class="keyword">else</span> <span class="variable language_">window</span>[e] = t.<span class="property">responseText</span>;&#125;),</span><br><span class="line">              (t.<span class="property">onerror</span> =</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">_mapLoader</span> ||</span><br><span class="line">                <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                  <span class="keyword">var</span> a = <span class="string">&quot;Test_&quot;</span>;</span><br><span class="line">                  <span class="number">0</span> === n.<span class="title function_">indexOf</span>(a)</span><br><span class="line">                    ? <span class="title class_">DataManager</span>.<span class="title function_">loadDataFile</span>(e, n.<span class="title function_">substring</span>(a.<span class="property">length</span>))</span><br><span class="line">                    : (<span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> = <span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> || i);</span><br><span class="line">                &#125;),</span><br><span class="line">              (<span class="variable language_">window</span>[e] = <span class="literal">null</span>),</span><br><span class="line">              t.<span class="title function_">send</span>();</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><p>游戏肯定不能使用乱码结果,那么解码部分肯定还在我们的console后面,下一句var i = a(t.responseText);<br>我们输出 console.log(i)试试?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(<span class="title class_">DataManager</span>.<span class="property">loadCSVFile</span> = <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">           <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>(),i = <span class="string">&quot;data/&quot;</span> + n;</span><br><span class="line">           t.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>, i),</span><br><span class="line">           t.<span class="title function_">overrideMimeType</span>(<span class="string">`text/plain; charset=<span class="subst">$&#123;$externMessage.CsvFileEncode&#125;</span>`</span>),</span><br><span class="line">   (t.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="keyword">if</span> (t.<span class="property">status</span> &lt; <span class="number">400</span>)</span><br><span class="line">         <span class="keyword">if</span> (<span class="title function_">o</span>(e)) &#123;</span><br><span class="line">           <span class="keyword">if</span> (r) <span class="keyword">var</span> n = performance.<span class="title function_">now</span>();</span><br><span class="line">            <span class="keyword">var</span> i = <span class="title function_">a</span>(t.<span class="property">responseText</span>);</span><br><span class="line">            <span class="comment">// 输出尝试????</span></span><br><span class="line">             <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">           r &amp;&amp; performance.<span class="title function_">now</span>() - n, (<span class="variable language_">window</span>[e] = i);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="variable language_">window</span>[e] = t.<span class="property">responseText</span>;&#125;),</span><br><span class="line">     (t.<span class="property">onerror</span> =</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">_mapLoader</span> ||</span><br><span class="line">       <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">         <span class="keyword">var</span> a = <span class="string">&quot;Test_&quot;</span>;</span><br><span class="line">         <span class="number">0</span> === n.<span class="title function_">indexOf</span>(a)</span><br><span class="line">           ? <span class="title class_">DataManager</span>.<span class="title function_">loadDataFile</span>(e, n.<span class="title function_">substring</span>(a.<span class="property">length</span>))</span><br><span class="line">           : (<span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> = <span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> || i);</span><br><span class="line">       &#125;),</span><br><span class="line">     (<span class="variable language_">window</span>[e] = <span class="literal">null</span>),</span><br><span class="line">     t.<span class="title function_">send</span>();</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><p>好起来了,成功输出解码结果,</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_15.png" style="height:100px"/> <p>看来a(t.responseText);a函数就是解码函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">a</span> = (<span class="params">a</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">for</span> (</span><br><span class="line">              <span class="keyword">var</span> e = a.<span class="property">length</span>, r = a.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>), n = <span class="title function_">g</span>(e), t = e - <span class="number">1</span>;</span><br><span class="line">              t &gt;= <span class="number">0</span>;</span><br><span class="line">              t = (t - <span class="number">1</span>) | <span class="number">0</span></span><br><span class="line">            ) &#123;</span><br><span class="line">              <span class="keyword">var</span> i = n[t],</span><br><span class="line">                o = <span class="title class_">Math</span>.<span class="title function_">floor</span>(i * e),</span><br><span class="line">                s = r[t];</span><br><span class="line">              (r[t] = r[o]), (r[o] = s);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> r.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">          &#125;,</span><br></pre></td></tr></table></figure><h5 id="如何解密"><a class="header-anchor" href="#如何解密"></a>如何解密</h5><p>观察a函数,它调用了g函数,看了下g函数,摸不着头脑,请出gpt:</p><blockquote><p>这段代码是一个JavaScript函数，它使用一种叫做&quot;Xorshift&quot;的伪随机数生成器算法生成随机数数组。</p><p>代码中的变量含义如下：</p><ul><li><code>s</code>：未定义的变量。</li><li><code>l</code>：存储生成的随机数数组。</li><li><code>c</code>、<code>d</code>、<code>f</code>：用于生成随机数的状态变量。</li><li><code>p</code>：种子（seed）值，用于初始化状态变量。</li><li><code>u</code>：循环计数器。</li></ul><p>函数 <code>g(a)</code> 接受一个参数 <code>a</code>，用于指定生成随机数的数量。如果 <code>l</code> 为空或者 <code>u</code> 小于等于 <code>a - 1</code>，则进入循环。在循环中，通过一系列的位运算和数学计算，更新状态变量 <code>c</code>、<code>d</code>、<code>f</code>、<code>p</code>，并将计算得到的随机数存储在数组 <code>l</code> 中。最后，函数返回生成的随机数数组 <code>l</code>。</p><p>请注意，这段代码的随机数生成器是基于算法的伪随机数生成器，生成的随机数序列是确定性的，即给定相同的种子值 <code>a.seed</code>，将会得到相同的随机数序列。</p></blockquote><p>看来g函数为a函数提供了服务,同时调查  p = Number(a.seed),多次输出发现其也是固定值</p><p>现在我们如何实现我们的解密然后汉化方案呢??</p><p>**思路1:**将密文解密后拿去汉化,然后将汉化文本通过原本加密函数加密,使程序读取密文,然后自己解密</p><p>**思路2:**将密文解密后拿去汉化,然后将程序中解密函数去掉,使程序直接读取明文</p><p>显然在没有加密函数情况下思路二是最方便的,同时我也没能找到加密函数,所以选取思路2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(t.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="keyword">if</span> (t.<span class="property">status</span> &lt; <span class="number">400</span>)</span><br><span class="line">         <span class="keyword">if</span> (<span class="title function_">o</span>(e)) &#123;</span><br><span class="line">           <span class="keyword">if</span> (r) <span class="keyword">var</span> n = performance.<span class="title function_">now</span>();</span><br><span class="line">            <span class="comment">//原代码</span></span><br><span class="line">            <span class="comment">//var i = a(t.responseText);</span></span><br><span class="line">            <span class="comment">//修改代码去掉a()</span></span><br><span class="line">            <span class="keyword">var</span> i = t.<span class="property">responseText</span></span><br><span class="line">           r &amp;&amp; performance.<span class="title function_">now</span>() - n, (<span class="variable language_">window</span>[e] = i);</span><br><span class="line">         &#125; <span class="keyword">else</span> <span class="variable language_">window</span>[e] = t.<span class="property">responseText</span>;&#125;),</span><br><span class="line">     (t.<span class="property">onerror</span> =</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">_mapLoader</span> ||</span><br><span class="line">       <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">         <span class="keyword">var</span> a = <span class="string">&quot;Test_&quot;</span>;</span><br><span class="line">         <span class="number">0</span> === n.<span class="title function_">indexOf</span>(a)</span><br><span class="line">           ? <span class="title class_">DataManager</span>.<span class="title function_">loadDataFile</span>(e, n.<span class="title function_">substring</span>(a.<span class="property">length</span>))</span><br><span class="line">           : (<span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> = <span class="title class_">DataManager</span>.<span class="property">_errorUrl</span> || i);</span><br><span class="line">       &#125;),</span><br><span class="line">     (<span class="variable language_">window</span>[e] = <span class="literal">null</span>),</span><br><span class="line">     t.<span class="title function_">send</span>();</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h4 id="json乱序文件"><a class="header-anchor" href="#json乱序文件"></a>json乱序文件</h4><p>在这个文件中我还发现了这一步,经过调试输出发现这里是对Actor.json文件进行解密的</p><img class="inline-img" src="https://observer-storage.oss-cn-chengdu.aliyuncs.com/img/article/ref/RE_rmmz_game_16.png" style="height:200px"/> <p>那照csv文件逆向操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(<span class="title class_">DataManager</span>.<span class="property">onXhrLoad</span> = <span class="keyword">function</span> (<span class="params">e, t, i, s</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">o</span>(t)) &#123;</span><br><span class="line">          <span class="keyword">if</span> (r) <span class="keyword">var</span> l = performance.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 1.解析游戏 dataEncrypt 下的JSON文件</span></span><br><span class="line">          <span class="comment">// console.log(&#x27;= Resolve &#x27; + i +&#x27; =&#x27;)</span></span><br><span class="line">          <span class="comment">// console.log(e)</span></span><br><span class="line">          <span class="comment">//var c = a(e.responseText);</span></span><br><span class="line">          <span class="keyword">var</span> c = e.<span class="property">responseText</span>;</span><br><span class="line">          <span class="comment">//console.log(JSON.parse(c))</span></span><br><span class="line"></span><br><span class="line">          r &amp;&amp; performance.<span class="title function_">now</span>() - l,</span><br><span class="line">            (<span class="variable language_">window</span>[t] = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(c)),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">onLoad</span>(<span class="variable language_">window</span>[t]);</span><br><span class="line">        &#125; <span class="keyword">else</span> n.<span class="title function_">call</span>(<span class="variable language_">this</span>, ...<span class="variable language_">arguments</span>);</span><br><span class="line">      &#125;),</span><br></pre></td></tr></table></figure><p><strong>由此逆向这个游戏的工作大功告成</strong></p>]]></content>
    
    
    <summary type="html">🥰学以致用，不亦乐乎？</summary>
    
    
    
    
    <category term="逆向工程" scheme="https://ninokz.github.io/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ninokz.github.io/2023/04/30/hello-world/"/>
    <id>https://ninokz.github.io/2023/04/30/hello-world/</id>
    <published>2023-04-30T15:00:01.604Z</published>
    <updated>2023-04-30T18:28:26.668Z</updated>
    
    <content type="html"><![CDATA[<p>天生万物以养民，民无一善可报天。<br>不知蝗蠹遍天下，苦尽苍生尽王臣。<br>人之生矣有贵贱，贵人长为天恩眷。<br>人生富贵总由天，草民之穷由天谴。<br>忽有狂徒夜磨刀，帝星飘摇荧惑高。<br>翻天覆地从今始，杀人何须惜手劳。<br>不忠之人曰可杀！不孝之人曰可杀！<br>不仁之人曰可杀！不义之人曰可杀！<br>不礼不智不信人，大西王曰杀杀杀！<br>我生不为逐鹿来，都门懒筑黄金台，<br>状元百官都如狗，总是刀下觳觫材。<br>传令麾下四王子，破城不须封刀匕。<br>山头代天树此碑，逆天之人立死跪亦死！</p><p><s>快说，谢谢大西王</s></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;天生万物以养民，民无一善可报天。&lt;br&gt;
不知蝗蠹遍天下，苦尽苍生尽王臣。&lt;br&gt;
人之生矣有贵贱，贵人长为天恩眷。&lt;br&gt;
人生富贵总由天，草民之穷由天谴。&lt;br&gt;
忽有狂徒夜磨刀，帝星飘摇荧惑高。&lt;br&gt;
翻天覆地从今始，杀人何须惜手劳。&lt;br&gt;
不忠之人曰可杀！不孝之</summary>
      
    
    
    
    
  </entry>
  
</feed>
